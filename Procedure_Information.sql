Procedure :

-- Kullanıcı tanımlı fonksiyonların dezavantajları; işlem gerçekleştirememeleridir.(execute transaction)
-- Başka bir deyişle, kullanıcı tanımlı fonksiyonlar içerisinde, bir işlem başlatamayız , commit veya rollback(geri almak) yapamayız.

-- PostgreSQL 11 işlemleri(transactions) destekleyen saklı procedürleri (stored procedures) kullanıma sundu.

CREATE PROCEDURE ifadesiyle yeni bir stored procedure tanımlanır.

create [or replace] procedure procedure_name(parameter_list)
language plpgsql
as $$
declare
-- variable declaration
begin
-- stored procedure body
end; $$

-- Bu syntax'da ;
-- İlk olarak, CREATE PROCEDURE anahtar kelimesinden sonra stored procedure'ün ismi tanımlanır.
-- İkinci olarak, stored procedure için parametreler tanımlanır. Bir stored procedure 0 veya birden fazla parametre içerebilir.
-- Üçüncü olarak, stored procedure'ün procedure dili olarak plpgsql   tanımlanır'.
-- NOT:  stored procedure için SQL,C vb. gibi diğer prosedüre dilleri de kullanılabilir.
-- Son olarak, stored procedure'ün body kısmının tanımlanması  için $$ kullanılır.

-- stored prosedürlerin parametreleri in ve inout moddadır. out modda olamazlar. 

-- Bir stored procedure bir değer return etmez. return ifadesini prosedür içerisinde bir değer ile kullanamayız.

return expression; -- bunun gibi kullanamayız.

-- Ancak, stored procedure'un hemen durması için return ifadesini ,ifade olmadan kullanabiliriz.

return; -- bu şekilde kullanabiliriz.

-- Eğer bir stored procedure'un bir değer döndürmesini istiyorsak, parametreleri inout modda kullanabiliriz.


-- PostgreSQL'de create procedure ifadesi örnekleri :


drop table if exists accounts;

create table accounts (
    id int generated by default as identity,
    name varchar(100) not null,
    balance dec(15,2) not null,
    primary key(id)
);

insert into accounts(name,balance)
values('Bob',10000);

insert into accounts(name,balance)
values('Alice',10000);


-- transfer adında bir stored procedure oluşturduk , bu transferler bir hesaptan diğerine belirli miktarda para aktarsın; 

create or replace procedure transfer(
   sender int,
   receiver int, 
   amount dec
)
language plpgsql    
as $$
begin
    -- subtracting the amount from the sender's account 
    update accounts 
    set balance = balance - amount 
    where id = sender;

    -- adding the amount to the receiver's account
    update accounts 
    set balance = balance + amount 
    where id = receiver;

    commit;
end;$$

-- stored procedure'un çağırılması : 

-- Bir storedd procedure'u çağırmak için, CALL ifadesi kullanılır :

call stored_procedure_name(argument_list);

-- Örneğin,  Alice'in hesabından Bob'un hesabına $1,000 tarnsfer etmek için transfer stored procedure'unu çağırılması ;

call transfer(1,2,1000);

